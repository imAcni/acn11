{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts", "../../../assets/siteMetadata.ts", "../../../lib/utils.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource, ComputedFields } from 'contentlayer/source-files';\nimport siteMetadata from './assets/siteMetadata';\nimport rehypePrismPlus from 'rehype-prism-plus';\nimport { remarkCodeTitles, remarkExtractFrontmatter, remarkImgToJsx } from 'pliny/mdx-plugins/index.js';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\nimport rehypeSlug from 'rehype-slug';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypePresetMinify from 'rehype-preset-minify';\nimport { Pluggable } from 'unified';\nimport rehypeKatex from 'rehype-katex';\nimport { countWords } from './lib/utils';\n\nconst computedFields: ComputedFields = {\n  readingTime: { type: 'json', resolve: (doc) => countWords(doc.body.raw) },\n  slug: {\n    type: 'string',\n    resolve: (doc) => doc._raw.flattenedPath.replace(/^.+?(\\/)/, ''),\n  },\n  path: {\n    type: 'string',\n    resolve: (doc) => doc._raw.flattenedPath,\n  },\n  filePath: {\n    type: 'string',\n    resolve: (doc) => doc._raw.sourceFilePath,\n  }\n};\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: `posts/**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    date: { type: 'date', required: true },\n    url: { type: 'string', required: true },\n    tags: { type: 'list', of: { type: 'string' }, default: [] },\n    lastmod: { type: 'date' },\n    draft: { type: 'boolean' },\n    summary: { type: 'string' },\n    images: { type: 'json' },\n    authors: { type: 'list', of: { type: 'string' } },\n    layout: { type: 'string' },\n    bibliography: { type: 'string' },\n    canonicalUrl: { type: 'string' }\n  },\n  computedFields: {\n    ...computedFields,\n    structuredData: {\n      type: 'json',\n      resolve: (doc) => ({\n        '@context': 'https://schema.org',\n        '@type': 'BlogPosting',\n        headline: doc.title,\n        datePublished: doc.date,\n        dateModified: doc.lastmod || doc.date,\n        description: doc.summary,\n        image: doc.images ? doc.images[0] : siteMetadata.socialBanner,\n        url: `${siteMetadata.siteUrl}/${doc._raw.flattenedPath}`\n      }),\n    }\n  },\n}))\n\nexport const Author = defineDocumentType(() => ({\n  name: 'Author',\n  filePathPattern: 'authors/**/*.mdx',\n  contentType: 'mdx',\n  fields: {\n    name: { type: 'string', required: true },\n    avatar: { type: 'string' },\n    occupation: { type: 'string' },\n    company: { type: 'string' },\n    email: { type: 'string' },\n    twitter: { type: 'string' },\n    linkedin: { type: 'string' },\n    github: { type: 'string' },\n    layout: { type: 'string' }\n  },\n  computedFields\n}))\n\nexport default makeSource({\n  contentDirPath: '.',\n  contentDirInclude: ['posts', 'authors'],\n  documentTypes: [Post, Author],\n  mdx: {\n    remarkPlugins: [\n      remarkExtractFrontmatter,\n      remarkGfm,\n      remarkCodeTitles,\n      remarkMath,\n      remarkImgToJsx\n    ],\n    rehypePlugins: [\n      rehypeSlug,\n      rehypeAutolinkHeadings,\n      rehypeKatex,\n      [rehypePrismPlus, { defaultLanguage: 'js', ignoreMissing: true, showLineNumbers: true }],\n      rehypePresetMinify as Pluggable<any[]>\n    ]\n  }\n})\n", "const siteMetadata = {\n  title: `acn1's blog`,\n  author: 'zS1m',\n  headerTitle: 'acn1',\n  description: 'Junior @ East Brunswick High School, Interested in Cybersecurity.',\n  language: 'en',\n  buildTime: '2023-08-01 10:14:12', \n  theme: 'dark', // system, dark or light\n  siteUrl: 'https://www.contrails.space',\n  siteRepo: 'https://github.com/zS1m/nextjs-contrails',\n  siteLogo: '/static/images/logo.png',\n  email: 'themightyhisez@gmail.com',\n  github: 'https://github.com/imAcni',\n  linkedin: 'https://www.linkedin.com/in/tyler-chin-91b22a25b?trk=people-guest_people_search-card',\n\n  locale: 'en',\n  analytics: {\n    // If you want to use an analytics provider you have to add it to the\n    // content security policy in the `next.config.js` file.\n    // supports Plausible, Simple Analytics, Umami, Posthog or Google Analytics.\n    umamiAnalytics: {\n      // We use an env variable for this site to avoid other users cloning our analytics ID\n      umamiWebsiteId: process.env.NEXT_UMAMI_ID, // e.g. 123e4567-e89b-12d3-a456-426614174000\n    },\n    baiduAnalytics: {\n      baiduAnalyticsId: process.env.BAIDU_ANALYTICS_ID\n    },\n    // plausibleAnalytics: {\n    //   plausibleDataDomain: '', // e.g. tailwind-nextjs-starter-blog.vercel.app\n    // },\n    // simpleAnalytics: {},\n    // posthogAnalytics: {\n    //   posthogProjectApiKey: '', // e.g. 123e4567-e89b-12d3-a456-426614174000\n    // },\n    // googleAnalytics: {\n    //   googleAnalyticsId: '', // e.g. G-XXXXXXX\n    // },\n  },\n  newsletter: {\n    // supports mailchimp, buttondown, convertkit, klaviyo, revue, emailoctopus\n    // Please add your .env file and modify it according to your selection\n    provider: 'buttondown',\n  },\n  comments: {\n    // If you want to use an analytics provider you have to add it to the\n    // content security policy in the `next.config.js` file.\n    // Select a provider and use the environment variables associated to it\n    // https://vercel.com/docs/environment-variables\n    provider: 'giscus', // supported providers: giscus, utterances, disqus\n    giscusConfig: {\n      // Visit the link below, and follow the steps in the 'configuration' section\n      // https://giscus.app/\n      repo: process.env.NEXT_PUBLIC_GISCUS_REPO,\n      repositoryId: process.env.NEXT_PUBLIC_GISCUS_REPOSITORY_ID,\n      category: process.env.NEXT_PUBLIC_GISCUS_CATEGORY,\n      categoryId: process.env.NEXT_PUBLIC_GISCUS_CATEGORY_ID,\n      mapping: 'pathname', // supported options: pathname, url, title\n      reactions: '1', // Emoji reactions: 1 = enable / 0 = disable\n      // Send discussion metadata periodically to the parent window: 1 = enable / 0 = disable\n      metadata: '0',\n      // theme example: light, dark, dark_dimmed, dark_high_contrast\n      // transparent_dark, preferred_color_scheme, custom\n      theme: 'dark',\n      // theme when dark mode\n      darkTheme: 'transparent_dark',\n      // If the theme option above is set to 'custom`\n      // please provide a link below to your custom theme css file.\n      // example: https://giscus.app/themes/custom_example.css\n      themeURL: '',\n      // This corresponds to the `data-lang=\"en\"` in giscus's configurations\n      lang: 'en',\n    },\n  },\n  search: {\n    provider: 'kbar', // kbar or algolia\n    kbarConfig: {\n      searchDocumentsPath: 'search.json', // path to load documents to search\n    },\n    // provider: 'algolia',\n    // algoliaConfig: {\n    //   // The application ID provided by Algolia\n    //   appId: 'R2IYF7ETH7',\n    //   // Public API key: it is safe to commit it\n    //   apiKey: '599cec31baffa4868cae4e79f180729b',\n    //   indexName: 'docsearch',\n    // },\n  },\n}\n\nexport default siteMetadata;\n", "import type { Post } from 'contentlayer/generated';\n\nexport function formatDate(date: string) {\n  const options: Intl.DateTimeFormatOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return new Date(date).toLocaleDateString('en-US', options);\n}\n\nexport function sortPosts(posts: Post[]) {\n  return posts.sort((a, b) => a.date < b.date ? 1 : -1);\n}\n\nexport function truncateSummary(text?: string, maxLength = 160) {\n  if (!text) {\n    return '';\n  } else if (text.length <= maxLength) {\n    return text;\n  } else {\n    return text.slice(0, maxLength) + '...';\n  }\n}\n\nexport function countWords(str: string) {\n  const chWords = Array.from(str)\n      .filter((char) => /[\\u4e00-\\u9fa5]/.test(char))\n      .length\n\n  const enWords = Array.from(str)\n      .map((char) => /[a-zA-Z0-9\\s]/.test(char) ? char : ' ')\n      .join('').split(/\\s+/).filter(s => s)\n      .length\n\n  const words = chWords + enWords;\n  const minutes = Math.round(words / 300);\n  const text = minutes < 1 ?  '\u5C0F\u4E8E\u4E00\u5206\u949F' : `${minutes} \u5206\u949F`;\n\n  return {\n    words,\n    minutes,\n    text\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
